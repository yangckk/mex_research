// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: road.proto

#include "road.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
class PositionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionRequest> _instance;
} _PositionRequest_default_instance_;
class PositionReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionReply> _instance;
} _PositionReply_default_instance_;
static void InitDefaultsPositionRequest_road_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PositionRequest_default_instance_;
    new (ptr) ::PositionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PositionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PositionRequest_road_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPositionRequest_road_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsPositionReply_road_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PositionReply_default_instance_;
    new (ptr) ::PositionReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PositionReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PositionReply_road_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPositionReply_road_2eproto}, {}};

void InitDefaults_road_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PositionRequest_road_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PositionReply_road_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_road_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_road_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_road_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_road_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PositionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PositionRequest, x_),
  PROTOBUF_FIELD_OFFSET(::PositionRequest, y_),
  PROTOBUF_FIELD_OFFSET(::PositionRequest, z_),
  PROTOBUF_FIELD_OFFSET(::PositionRequest, kp_),
  PROTOBUF_FIELD_OFFSET(::PositionRequest, kd_),
  PROTOBUF_FIELD_OFFSET(::PositionRequest, ki_),
  PROTOBUF_FIELD_OFFSET(::PositionRequest, clienttime_),
  PROTOBUF_FIELD_OFFSET(::PositionRequest, id_),
  PROTOBUF_FIELD_OFFSET(::PositionRequest, sp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PositionReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PositionReply, actuationforce_),
  PROTOBUF_FIELD_OFFSET(::PositionReply, dtime_),
  PROTOBUF_FIELD_OFFSET(::PositionReply, servertime_),
  PROTOBUF_FIELD_OFFSET(::PositionReply, standarddeviation_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PositionRequest)},
  { 14, -1, sizeof(::PositionReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PositionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PositionReply_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_road_2eproto = {
  {}, AddDescriptors_road_2eproto, "road.proto", schemas,
  file_default_instances, TableStruct_road_2eproto::offsets,
  file_level_metadata_road_2eproto, 2, file_level_enum_descriptors_road_2eproto, file_level_service_descriptors_road_2eproto,
};

const char descriptor_table_protodef_road_2eproto[] =
  "\n\nroad.proto\032\037google/protobuf/timestamp."
  "proto\"\236\001\n\017PositionRequest\022\t\n\001x\030\001 \001(\002\022\t\n\001"
  "y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\n\n\002kp\030\004 \001(\002\022\n\n\002kd\030\005 \001"
  "(\002\022\n\n\002ki\030\006 \001(\002\022.\n\nclientTime\030\007 \001(\0132\032.goo"
  "gle.protobuf.Timestamp\022\n\n\002id\030\010 \001(\003\022\n\n\002sp"
  "\030\t \001(\002\"e\n\rPositionReply\022\026\n\016actuationForc"
  "e\030\001 \001(\002\022\r\n\005dTime\030\002 \001(\003\022\022\n\nserverTime\030\003 \001"
  "(\t\022\031\n\021standardDeviation\030\004 \001(\0022>\n\010Positio"
  "n\0222\n\014SendPosition\022\020.PositionRequest\032\016.Po"
  "sitionReply\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_road_2eproto = {
  false, InitDefaults_road_2eproto, 
  descriptor_table_protodef_road_2eproto,
  "road.proto", &assign_descriptors_table_road_2eproto, 381,
};

void AddDescriptors_road_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_road_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_road_2eproto = []() { AddDescriptors_road_2eproto(); return true; }();

// ===================================================================

void PositionRequest::InitAsDefaultInstance() {
  ::_PositionRequest_default_instance_._instance.get_mutable()->clienttime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class PositionRequest::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& clienttime(const PositionRequest* msg);
};

const ::google::protobuf::Timestamp&
PositionRequest::HasBitSetters::clienttime(const PositionRequest* msg) {
  return *msg->clienttime_;
}
void PositionRequest::clear_clienttime() {
  if (GetArenaNoVirtual() == nullptr && clienttime_ != nullptr) {
    delete clienttime_;
  }
  clienttime_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionRequest::kXFieldNumber;
const int PositionRequest::kYFieldNumber;
const int PositionRequest::kZFieldNumber;
const int PositionRequest::kKpFieldNumber;
const int PositionRequest::kKdFieldNumber;
const int PositionRequest::kKiFieldNumber;
const int PositionRequest::kClientTimeFieldNumber;
const int PositionRequest::kIdFieldNumber;
const int PositionRequest::kSpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionRequest::PositionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PositionRequest)
}
PositionRequest::PositionRequest(const PositionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_clienttime()) {
    clienttime_ = new ::google::protobuf::Timestamp(*from.clienttime_);
  } else {
    clienttime_ = nullptr;
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&sp_) -
    reinterpret_cast<char*>(&x_)) + sizeof(sp_));
  // @@protoc_insertion_point(copy_constructor:PositionRequest)
}

void PositionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PositionRequest_road_2eproto.base);
  ::memset(&clienttime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sp_) -
      reinterpret_cast<char*>(&clienttime_)) + sizeof(sp_));
}

PositionRequest::~PositionRequest() {
  // @@protoc_insertion_point(destructor:PositionRequest)
  SharedDtor();
}

void PositionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete clienttime_;
}

void PositionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PositionRequest& PositionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PositionRequest_road_2eproto.base);
  return *internal_default_instance();
}


void PositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PositionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && clienttime_ != nullptr) {
    delete clienttime_;
  }
  clienttime_ = nullptr;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sp_) -
      reinterpret_cast<char*>(&x_)) + sizeof(sp_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PositionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PositionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_x(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_y(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float z = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_z(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float kp = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_kp(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float kd = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_kd(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float ki = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 53) goto handle_unusual;
        msg->set_ki(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // .google.protobuf.Timestamp clientTime = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_clienttime();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 id = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float sp = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 77) goto handle_unusual;
        msg->set_sp(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PositionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PositionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float kp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float kd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ki = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (53 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ki_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp clientTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clienttime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float sp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (77 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PositionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PositionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PositionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PositionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // float kp = 4;
  if (this->kp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->kp(), output);
  }

  // float kd = 5;
  if (this->kd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->kd(), output);
  }

  // float ki = 6;
  if (this->ki() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->ki(), output);
  }

  // .google.protobuf.Timestamp clientTime = 7;
  if (this->has_clienttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::clienttime(this), output);
  }

  // int64 id = 8;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->id(), output);
  }

  // float sp = 9;
  if (this->sp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->sp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PositionRequest)
}

::google::protobuf::uint8* PositionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PositionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // float kp = 4;
  if (this->kp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->kp(), target);
  }

  // float kd = 5;
  if (this->kd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->kd(), target);
  }

  // float ki = 6;
  if (this->ki() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->ki(), target);
  }

  // .google.protobuf.Timestamp clientTime = 7;
  if (this->has_clienttime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::clienttime(this), target);
  }

  // int64 id = 8;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->id(), target);
  }

  // float sp = 9;
  if (this->sp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->sp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PositionRequest)
  return target;
}

size_t PositionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PositionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp clientTime = 7;
  if (this->has_clienttime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *clienttime_);
  }

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float kp = 4;
  if (this->kp() != 0) {
    total_size += 1 + 4;
  }

  // float kd = 5;
  if (this->kd() != 0) {
    total_size += 1 + 4;
  }

  // float ki = 6;
  if (this->ki() != 0) {
    total_size += 1 + 4;
  }

  // int64 id = 8;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // float sp = 9;
  if (this->sp() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PositionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PositionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PositionRequest)
    MergeFrom(*source);
  }
}

void PositionRequest::MergeFrom(const PositionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_clienttime()) {
    mutable_clienttime()->::google::protobuf::Timestamp::MergeFrom(from.clienttime());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.kp() != 0) {
    set_kp(from.kp());
  }
  if (from.kd() != 0) {
    set_kd(from.kd());
  }
  if (from.ki() != 0) {
    set_ki(from.ki());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.sp() != 0) {
    set_sp(from.sp());
  }
}

void PositionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionRequest::CopyFrom(const PositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionRequest::IsInitialized() const {
  return true;
}

void PositionRequest::Swap(PositionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionRequest::InternalSwap(PositionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(clienttime_, other->clienttime_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(kp_, other->kp_);
  swap(kd_, other->kd_);
  swap(ki_, other->ki_);
  swap(id_, other->id_);
  swap(sp_, other->sp_);
}

::google::protobuf::Metadata PositionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_road_2eproto);
  return ::file_level_metadata_road_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PositionReply::InitAsDefaultInstance() {
}
class PositionReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionReply::kActuationForceFieldNumber;
const int PositionReply::kDTimeFieldNumber;
const int PositionReply::kServerTimeFieldNumber;
const int PositionReply::kStandardDeviationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionReply::PositionReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PositionReply)
}
PositionReply::PositionReply(const PositionReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servertime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servertime().size() > 0) {
    servertime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servertime_);
  }
  ::memcpy(&dtime_, &from.dtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&standarddeviation_) -
    reinterpret_cast<char*>(&dtime_)) + sizeof(standarddeviation_));
  // @@protoc_insertion_point(copy_constructor:PositionReply)
}

void PositionReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PositionReply_road_2eproto.base);
  servertime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&standarddeviation_) -
      reinterpret_cast<char*>(&dtime_)) + sizeof(standarddeviation_));
}

PositionReply::~PositionReply() {
  // @@protoc_insertion_point(destructor:PositionReply)
  SharedDtor();
}

void PositionReply::SharedDtor() {
  servertime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PositionReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PositionReply& PositionReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PositionReply_road_2eproto.base);
  return *internal_default_instance();
}


void PositionReply::Clear() {
// @@protoc_insertion_point(message_clear_start:PositionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servertime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&standarddeviation_) -
      reinterpret_cast<char*>(&dtime_)) + sizeof(standarddeviation_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PositionReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PositionReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float actuationForce = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_actuationforce(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // int64 dTime = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_dtime(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string serverTime = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("PositionReply.serverTime");
        object = msg->mutable_servertime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float standardDeviation = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_standarddeviation(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PositionReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PositionReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float actuationForce = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &actuationforce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 dTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servertime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servertime().data(), static_cast<int>(this->servertime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PositionReply.serverTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float standardDeviation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &standarddeviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PositionReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PositionReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PositionReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PositionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float actuationForce = 1;
  if (this->actuationforce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->actuationforce(), output);
  }

  // int64 dTime = 2;
  if (this->dtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->dtime(), output);
  }

  // string serverTime = 3;
  if (this->servertime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servertime().data(), static_cast<int>(this->servertime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PositionReply.serverTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->servertime(), output);
  }

  // float standardDeviation = 4;
  if (this->standarddeviation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->standarddeviation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PositionReply)
}

::google::protobuf::uint8* PositionReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PositionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float actuationForce = 1;
  if (this->actuationforce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->actuationforce(), target);
  }

  // int64 dTime = 2;
  if (this->dtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->dtime(), target);
  }

  // string serverTime = 3;
  if (this->servertime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servertime().data(), static_cast<int>(this->servertime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PositionReply.serverTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->servertime(), target);
  }

  // float standardDeviation = 4;
  if (this->standarddeviation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->standarddeviation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PositionReply)
  return target;
}

size_t PositionReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PositionReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string serverTime = 3;
  if (this->servertime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servertime());
  }

  // int64 dTime = 2;
  if (this->dtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dtime());
  }

  // float actuationForce = 1;
  if (this->actuationforce() != 0) {
    total_size += 1 + 4;
  }

  // float standardDeviation = 4;
  if (this->standarddeviation() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PositionReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionReply* source =
      ::google::protobuf::DynamicCastToGenerated<PositionReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PositionReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PositionReply)
    MergeFrom(*source);
  }
}

void PositionReply::MergeFrom(const PositionReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PositionReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servertime().size() > 0) {

    servertime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servertime_);
  }
  if (from.dtime() != 0) {
    set_dtime(from.dtime());
  }
  if (from.actuationforce() != 0) {
    set_actuationforce(from.actuationforce());
  }
  if (from.standarddeviation() != 0) {
    set_standarddeviation(from.standarddeviation());
  }
}

void PositionReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PositionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionReply::CopyFrom(const PositionReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PositionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionReply::IsInitialized() const {
  return true;
}

void PositionReply::Swap(PositionReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionReply::InternalSwap(PositionReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  servertime_.Swap(&other->servertime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dtime_, other->dtime_);
  swap(actuationforce_, other->actuationforce_);
  swap(standarddeviation_, other->standarddeviation_);
}

::google::protobuf::Metadata PositionReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_road_2eproto);
  return ::file_level_metadata_road_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::PositionRequest* Arena::CreateMaybeMessage< ::PositionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::PositionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PositionReply* Arena::CreateMaybeMessage< ::PositionReply >(Arena* arena) {
  return Arena::CreateInternal< ::PositionReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
