// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: road.proto

#include "road.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class PositionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionRequest>
      _instance;
} _PositionRequest_default_instance_;
class PositionReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionReply>
      _instance;
} _PositionReply_default_instance_;
namespace protobuf_road_2eproto {
static void InitDefaultsPositionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PositionRequest_default_instance_;
    new (ptr) ::PositionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PositionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PositionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPositionRequest}, {}};

static void InitDefaultsPositionReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PositionReply_default_instance_;
    new (ptr) ::PositionReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PositionReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PositionReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPositionReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PositionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PositionReply.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionRequest, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionRequest, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionRequest, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionReply, actuationforce_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PositionRequest)},
  { 8, -1, sizeof(::PositionReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PositionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PositionReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "road.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nroad.proto\"2\n\017PositionRequest\022\t\n\001x\030\001 \001"
      "(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"4\n\rPositionRepl"
      "y\022\013\n\003pos\030\001 \001(\t\022\026\n\016actuationForce\030\002 \001(\0022>"
      "\n\010Position\0222\n\014SendPosition\022\020.PositionReq"
      "uest\032\016.PositionReply\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 190);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "road.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_road_2eproto

// ===================================================================

void PositionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionRequest::kXFieldNumber;
const int PositionRequest::kYFieldNumber;
const int PositionRequest::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionRequest::PositionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_road_2eproto::scc_info_PositionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PositionRequest)
}
PositionRequest::PositionRequest(const PositionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:PositionRequest)
}

void PositionRequest::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

PositionRequest::~PositionRequest() {
  // @@protoc_insertion_point(destructor:PositionRequest)
  SharedDtor();
}

void PositionRequest::SharedDtor() {
}

void PositionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PositionRequest::descriptor() {
  ::protobuf_road_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_road_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PositionRequest& PositionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_road_2eproto::scc_info_PositionRequest.base);
  return *internal_default_instance();
}


void PositionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PositionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool PositionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PositionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PositionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PositionRequest)
  return false;
#undef DO_
}

void PositionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PositionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PositionRequest)
}

::google::protobuf::uint8* PositionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PositionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PositionRequest)
  return target;
}

size_t PositionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PositionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PositionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PositionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PositionRequest)
    MergeFrom(*source);
  }
}

void PositionRequest::MergeFrom(const PositionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PositionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PositionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionRequest::CopyFrom(const PositionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PositionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionRequest::IsInitialized() const {
  return true;
}

void PositionRequest::Swap(PositionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionRequest::InternalSwap(PositionRequest* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PositionRequest::GetMetadata() const {
  protobuf_road_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_road_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PositionReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionReply::kPosFieldNumber;
const int PositionReply::kActuationForceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionReply::PositionReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_road_2eproto::scc_info_PositionReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PositionReply)
}
PositionReply::PositionReply(const PositionReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pos().size() > 0) {
    pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pos_);
  }
  actuationforce_ = from.actuationforce_;
  // @@protoc_insertion_point(copy_constructor:PositionReply)
}

void PositionReply::SharedCtor() {
  pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actuationforce_ = 0;
}

PositionReply::~PositionReply() {
  // @@protoc_insertion_point(destructor:PositionReply)
  SharedDtor();
}

void PositionReply::SharedDtor() {
  pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PositionReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PositionReply::descriptor() {
  ::protobuf_road_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_road_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PositionReply& PositionReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_road_2eproto::scc_info_PositionReply.base);
  return *internal_default_instance();
}


void PositionReply::Clear() {
// @@protoc_insertion_point(message_clear_start:PositionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actuationforce_ = 0;
  _internal_metadata_.Clear();
}

bool PositionReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PositionReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pos()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pos().data(), static_cast<int>(this->pos().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PositionReply.pos"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float actuationForce = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &actuationforce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PositionReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PositionReply)
  return false;
#undef DO_
}

void PositionReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PositionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pos = 1;
  if (this->pos().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pos().data(), static_cast<int>(this->pos().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PositionReply.pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pos(), output);
  }

  // float actuationForce = 2;
  if (this->actuationforce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->actuationforce(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PositionReply)
}

::google::protobuf::uint8* PositionReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PositionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pos = 1;
  if (this->pos().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pos().data(), static_cast<int>(this->pos().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PositionReply.pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pos(), target);
  }

  // float actuationForce = 2;
  if (this->actuationforce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->actuationforce(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PositionReply)
  return target;
}

size_t PositionReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PositionReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pos = 1;
  if (this->pos().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pos());
  }

  // float actuationForce = 2;
  if (this->actuationforce() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PositionReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PositionReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PositionReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PositionReply)
    MergeFrom(*source);
  }
}

void PositionReply::MergeFrom(const PositionReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PositionReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pos().size() > 0) {

    pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pos_);
  }
  if (from.actuationforce() != 0) {
    set_actuationforce(from.actuationforce());
  }
}

void PositionReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PositionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionReply::CopyFrom(const PositionReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PositionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionReply::IsInitialized() const {
  return true;
}

void PositionReply::Swap(PositionReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionReply::InternalSwap(PositionReply* other) {
  using std::swap;
  pos_.Swap(&other->pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(actuationforce_, other->actuationforce_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PositionReply::GetMetadata() const {
  protobuf_road_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_road_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PositionRequest* Arena::CreateMaybeMessage< ::PositionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::PositionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PositionReply* Arena::CreateMaybeMessage< ::PositionReply >(Arena* arena) {
  return Arena::CreateInternal< ::PositionReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
