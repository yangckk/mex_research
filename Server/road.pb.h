// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: road.proto

#ifndef PROTOBUF_INCLUDED_road_2eproto
#define PROTOBUF_INCLUDED_road_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_road_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_road_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_road_2eproto();
class PositionReply;
class PositionReplyDefaultTypeInternal;
extern PositionReplyDefaultTypeInternal _PositionReply_default_instance_;
class PositionRequest;
class PositionRequestDefaultTypeInternal;
extern PositionRequestDefaultTypeInternal _PositionRequest_default_instance_;
namespace google {
namespace protobuf {
template<> ::PositionReply* Arena::CreateMaybeMessage<::PositionReply>(Arena*);
template<> ::PositionRequest* Arena::CreateMaybeMessage<::PositionRequest>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class PositionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PositionRequest) */ {
 public:
  PositionRequest();
  virtual ~PositionRequest();

  PositionRequest(const PositionRequest& from);

  inline PositionRequest& operator=(const PositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PositionRequest(PositionRequest&& from) noexcept
    : PositionRequest() {
    *this = ::std::move(from);
  }

  inline PositionRequest& operator=(PositionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PositionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositionRequest* internal_default_instance() {
    return reinterpret_cast<const PositionRequest*>(
               &_PositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PositionRequest* other);
  friend void swap(PositionRequest& a, PositionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PositionRequest* New() const final {
    return CreateMaybeMessage<PositionRequest>(nullptr);
  }

  PositionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PositionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PositionRequest& from);
  void MergeFrom(const PositionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Timestamp clientTime = 7;
  bool has_clienttime() const;
  void clear_clienttime();
  static const int kClientTimeFieldNumber = 7;
  const ::google::protobuf::Timestamp& clienttime() const;
  ::google::protobuf::Timestamp* release_clienttime();
  ::google::protobuf::Timestamp* mutable_clienttime();
  void set_allocated_clienttime(::google::protobuf::Timestamp* clienttime);

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // float kp = 4;
  void clear_kp();
  static const int kKpFieldNumber = 4;
  float kp() const;
  void set_kp(float value);

  // float kd = 5;
  void clear_kd();
  static const int kKdFieldNumber = 5;
  float kd() const;
  void set_kd(float value);

  // float ki = 6;
  void clear_ki();
  static const int kKiFieldNumber = 6;
  float ki() const;
  void set_ki(float value);

  // int64 id = 8;
  void clear_id();
  static const int kIdFieldNumber = 8;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // float sp = 9;
  void clear_sp();
  static const int kSpFieldNumber = 9;
  float sp() const;
  void set_sp(float value);

  // @@protoc_insertion_point(class_scope:PositionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Timestamp* clienttime_;
  float x_;
  float y_;
  float z_;
  float kp_;
  float kd_;
  float ki_;
  ::google::protobuf::int64 id_;
  float sp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_road_2eproto;
};
// -------------------------------------------------------------------

class PositionReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PositionReply) */ {
 public:
  PositionReply();
  virtual ~PositionReply();

  PositionReply(const PositionReply& from);

  inline PositionReply& operator=(const PositionReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PositionReply(PositionReply&& from) noexcept
    : PositionReply() {
    *this = ::std::move(from);
  }

  inline PositionReply& operator=(PositionReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PositionReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PositionReply* internal_default_instance() {
    return reinterpret_cast<const PositionReply*>(
               &_PositionReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PositionReply* other);
  friend void swap(PositionReply& a, PositionReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PositionReply* New() const final {
    return CreateMaybeMessage<PositionReply>(nullptr);
  }

  PositionReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PositionReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PositionReply& from);
  void MergeFrom(const PositionReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string serverTime = 3;
  void clear_servertime();
  static const int kServerTimeFieldNumber = 3;
  const ::std::string& servertime() const;
  void set_servertime(const ::std::string& value);
  #if LANG_CXX11
  void set_servertime(::std::string&& value);
  #endif
  void set_servertime(const char* value);
  void set_servertime(const char* value, size_t size);
  ::std::string* mutable_servertime();
  ::std::string* release_servertime();
  void set_allocated_servertime(::std::string* servertime);

  // int64 dTime = 2;
  void clear_dtime();
  static const int kDTimeFieldNumber = 2;
  ::google::protobuf::int64 dtime() const;
  void set_dtime(::google::protobuf::int64 value);

  // float actuationForce = 1;
  void clear_actuationforce();
  static const int kActuationForceFieldNumber = 1;
  float actuationforce() const;
  void set_actuationforce(float value);

  // float standardDeviation = 4;
  void clear_standarddeviation();
  static const int kStandardDeviationFieldNumber = 4;
  float standarddeviation() const;
  void set_standarddeviation(float value);

  // @@protoc_insertion_point(class_scope:PositionReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr servertime_;
  ::google::protobuf::int64 dtime_;
  float actuationforce_;
  float standarddeviation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_road_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PositionRequest

// float x = 1;
inline void PositionRequest::clear_x() {
  x_ = 0;
}
inline float PositionRequest::x() const {
  // @@protoc_insertion_point(field_get:PositionRequest.x)
  return x_;
}
inline void PositionRequest::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:PositionRequest.x)
}

// float y = 2;
inline void PositionRequest::clear_y() {
  y_ = 0;
}
inline float PositionRequest::y() const {
  // @@protoc_insertion_point(field_get:PositionRequest.y)
  return y_;
}
inline void PositionRequest::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:PositionRequest.y)
}

// float z = 3;
inline void PositionRequest::clear_z() {
  z_ = 0;
}
inline float PositionRequest::z() const {
  // @@protoc_insertion_point(field_get:PositionRequest.z)
  return z_;
}
inline void PositionRequest::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:PositionRequest.z)
}

// float kp = 4;
inline void PositionRequest::clear_kp() {
  kp_ = 0;
}
inline float PositionRequest::kp() const {
  // @@protoc_insertion_point(field_get:PositionRequest.kp)
  return kp_;
}
inline void PositionRequest::set_kp(float value) {
  
  kp_ = value;
  // @@protoc_insertion_point(field_set:PositionRequest.kp)
}

// float kd = 5;
inline void PositionRequest::clear_kd() {
  kd_ = 0;
}
inline float PositionRequest::kd() const {
  // @@protoc_insertion_point(field_get:PositionRequest.kd)
  return kd_;
}
inline void PositionRequest::set_kd(float value) {
  
  kd_ = value;
  // @@protoc_insertion_point(field_set:PositionRequest.kd)
}

// float ki = 6;
inline void PositionRequest::clear_ki() {
  ki_ = 0;
}
inline float PositionRequest::ki() const {
  // @@protoc_insertion_point(field_get:PositionRequest.ki)
  return ki_;
}
inline void PositionRequest::set_ki(float value) {
  
  ki_ = value;
  // @@protoc_insertion_point(field_set:PositionRequest.ki)
}

// .google.protobuf.Timestamp clientTime = 7;
inline bool PositionRequest::has_clienttime() const {
  return this != internal_default_instance() && clienttime_ != nullptr;
}
inline const ::google::protobuf::Timestamp& PositionRequest::clienttime() const {
  const ::google::protobuf::Timestamp* p = clienttime_;
  // @@protoc_insertion_point(field_get:PositionRequest.clientTime)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* PositionRequest::release_clienttime() {
  // @@protoc_insertion_point(field_release:PositionRequest.clientTime)
  
  ::google::protobuf::Timestamp* temp = clienttime_;
  clienttime_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PositionRequest::mutable_clienttime() {
  
  if (clienttime_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    clienttime_ = p;
  }
  // @@protoc_insertion_point(field_mutable:PositionRequest.clientTime)
  return clienttime_;
}
inline void PositionRequest::set_allocated_clienttime(::google::protobuf::Timestamp* clienttime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(clienttime_);
  }
  if (clienttime) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(clienttime)->GetArena();
    if (message_arena != submessage_arena) {
      clienttime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clienttime, submessage_arena);
    }
    
  } else {
    
  }
  clienttime_ = clienttime;
  // @@protoc_insertion_point(field_set_allocated:PositionRequest.clientTime)
}

// int64 id = 8;
inline void PositionRequest::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PositionRequest::id() const {
  // @@protoc_insertion_point(field_get:PositionRequest.id)
  return id_;
}
inline void PositionRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:PositionRequest.id)
}

// float sp = 9;
inline void PositionRequest::clear_sp() {
  sp_ = 0;
}
inline float PositionRequest::sp() const {
  // @@protoc_insertion_point(field_get:PositionRequest.sp)
  return sp_;
}
inline void PositionRequest::set_sp(float value) {
  
  sp_ = value;
  // @@protoc_insertion_point(field_set:PositionRequest.sp)
}

// -------------------------------------------------------------------

// PositionReply

// float actuationForce = 1;
inline void PositionReply::clear_actuationforce() {
  actuationforce_ = 0;
}
inline float PositionReply::actuationforce() const {
  // @@protoc_insertion_point(field_get:PositionReply.actuationForce)
  return actuationforce_;
}
inline void PositionReply::set_actuationforce(float value) {
  
  actuationforce_ = value;
  // @@protoc_insertion_point(field_set:PositionReply.actuationForce)
}

// int64 dTime = 2;
inline void PositionReply::clear_dtime() {
  dtime_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 PositionReply::dtime() const {
  // @@protoc_insertion_point(field_get:PositionReply.dTime)
  return dtime_;
}
inline void PositionReply::set_dtime(::google::protobuf::int64 value) {
  
  dtime_ = value;
  // @@protoc_insertion_point(field_set:PositionReply.dTime)
}

// string serverTime = 3;
inline void PositionReply::clear_servertime() {
  servertime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PositionReply::servertime() const {
  // @@protoc_insertion_point(field_get:PositionReply.serverTime)
  return servertime_.GetNoArena();
}
inline void PositionReply::set_servertime(const ::std::string& value) {
  
  servertime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PositionReply.serverTime)
}
#if LANG_CXX11
inline void PositionReply::set_servertime(::std::string&& value) {
  
  servertime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PositionReply.serverTime)
}
#endif
inline void PositionReply::set_servertime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  servertime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PositionReply.serverTime)
}
inline void PositionReply::set_servertime(const char* value, size_t size) {
  
  servertime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PositionReply.serverTime)
}
inline ::std::string* PositionReply::mutable_servertime() {
  
  // @@protoc_insertion_point(field_mutable:PositionReply.serverTime)
  return servertime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PositionReply::release_servertime() {
  // @@protoc_insertion_point(field_release:PositionReply.serverTime)
  
  return servertime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PositionReply::set_allocated_servertime(::std::string* servertime) {
  if (servertime != nullptr) {
    
  } else {
    
  }
  servertime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servertime);
  // @@protoc_insertion_point(field_set_allocated:PositionReply.serverTime)
}

// float standardDeviation = 4;
inline void PositionReply::clear_standarddeviation() {
  standarddeviation_ = 0;
}
inline float PositionReply::standarddeviation() const {
  // @@protoc_insertion_point(field_get:PositionReply.standardDeviation)
  return standarddeviation_;
}
inline void PositionReply::set_standarddeviation(float value) {
  
  standarddeviation_ = value;
  // @@protoc_insertion_point(field_set:PositionReply.standardDeviation)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_road_2eproto
